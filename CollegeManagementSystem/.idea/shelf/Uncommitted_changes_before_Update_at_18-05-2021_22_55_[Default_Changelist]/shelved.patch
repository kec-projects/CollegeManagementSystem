Index: src/main/java/com/collegemanagementsystem/Entity/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Entity;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"Student\")\r\npublic class Student {\r\n     @Id\r\n     @GeneratedValue\r\n     private long userID;\r\n     private long registrationNo;\r\n     private long rollNo;\r\n     private String name;\r\n     private String department;\r\n     private long batch;\r\n     private String category;\r\n     private String fatherName;\r\n     private String motherName;\r\n     private long fatherContactNo;\r\n     private long emergencyContactNo;\r\n     private long aadhaarNo;\r\n     private String dateOfBirth;\r\n     private String bloodGroup;\r\n\r\n     public Student() {\r\n     }\r\n\r\n     public Student(long userID, long registrationNo, long rollNo, String name, String department, long batch, String category, String fatherName, String motherName, long fatherContactNo, long emergencyContactNo, long aadhaarNo, String dateOfBirth, String bloodGroup) {\r\n          this.userID = userID;\r\n          this.registrationNo = registrationNo;\r\n          this.rollNo = rollNo;\r\n          this.name = name;\r\n          this.department = department;\r\n          this.batch = batch;\r\n          this.category = category;\r\n          this.fatherName = fatherName;\r\n          this.motherName = motherName;\r\n          this.fatherContactNo = fatherContactNo;\r\n          this.emergencyContactNo = emergencyContactNo;\r\n          this.aadhaarNo = aadhaarNo;\r\n          this.dateOfBirth = dateOfBirth;\r\n          this.bloodGroup = bloodGroup;\r\n     }\r\n\r\n     public long getUserID() {\r\n          return userID;\r\n     }\r\n\r\n     public void setUserID(long userID) {\r\n          this.userID = userID;\r\n     }\r\n\r\n     public long getRegistrationNo() {\r\n          return registrationNo;\r\n     }\r\n\r\n     public void setRegistrationNo(long registrationNo) {\r\n          this.registrationNo = registrationNo;\r\n     }\r\n\r\n     public long getRollNo() {\r\n          return rollNo;\r\n     }\r\n\r\n     public void setRollNo(long rollNo) {\r\n          this.rollNo = rollNo;\r\n     }\r\n\r\n     public String getName() {\r\n          return name;\r\n     }\r\n\r\n     public void setName(String name) {\r\n          this.name = name;\r\n     }\r\n\r\n     public String getDepartment() {\r\n          return department;\r\n     }\r\n\r\n     public void setDepartment(String department) {\r\n          this.department = department;\r\n     }\r\n\r\n     public long getBatch() {\r\n          return batch;\r\n     }\r\n\r\n     public void setBatch(long batch) {\r\n          this.batch = batch;\r\n     }\r\n\r\n     public String getCategory() {\r\n          return category;\r\n     }\r\n\r\n     public void setCategory(String category) {\r\n          this.category = category;\r\n     }\r\n\r\n     public String getFatherName() {\r\n          return fatherName;\r\n     }\r\n\r\n     public void setFatherName(String fatherName) {\r\n          this.fatherName = fatherName;\r\n     }\r\n\r\n     public String getMotherName() {\r\n          return motherName;\r\n     }\r\n\r\n     public void setMotherName(String motherName) {\r\n          this.motherName = motherName;\r\n     }\r\n\r\n     public long getFatherContactNo() {\r\n          return fatherContactNo;\r\n     }\r\n\r\n     public void setFatherContactNo(long fatherContactNo) {\r\n          this.fatherContactNo = fatherContactNo;\r\n     }\r\n\r\n     public long getEmergencyContactNo() {\r\n          return emergencyContactNo;\r\n     }\r\n\r\n     public void setEmergencyContactNo(long emergencyContactNo) {\r\n          this.emergencyContactNo = emergencyContactNo;\r\n     }\r\n\r\n     public long getAadhaarNo() {\r\n          return aadhaarNo;\r\n     }\r\n\r\n     public void setAadhaarNo(long aadhaarNo) {\r\n          this.aadhaarNo = aadhaarNo;\r\n     }\r\n\r\n     public String getDateOfBirth() {\r\n          return dateOfBirth;\r\n     }\r\n\r\n     public void setDateOfBirth(String dateOfBirth) {\r\n          this.dateOfBirth = dateOfBirth;\r\n     }\r\n\r\n     public String getBloodGroup() {\r\n          return bloodGroup;\r\n     }\r\n\r\n     public void setBloodGroup(String bloodGroup) {\r\n          this.bloodGroup = bloodGroup;\r\n     }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Entity/Student.java b/src/main/java/com/collegemanagementsystem/Entity/Student.java
--- a/src/main/java/com/collegemanagementsystem/Entity/Student.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Entity/Student.java	(date 1621259187366)
@@ -10,7 +10,7 @@
 public class Student {
      @Id
      @GeneratedValue
-     private long userID;
+     private int userID;
      private long registrationNo;
      private long rollNo;
      private String name;
@@ -24,11 +24,11 @@
      private long aadhaarNo;
      private String dateOfBirth;
      private String bloodGroup;
-
+     private String semester;
      public Student() {
      }
 
-     public Student(long userID, long registrationNo, long rollNo, String name, String department, long batch, String category, String fatherName, String motherName, long fatherContactNo, long emergencyContactNo, long aadhaarNo, String dateOfBirth, String bloodGroup) {
+     public Student(int userID, long registrationNo, long rollNo, String name, String department, long batch, String category, String fatherName, String motherName, long fatherContactNo, long emergencyContactNo, long aadhaarNo, String dateOfBirth, String bloodGroup) {
           this.userID = userID;
           this.registrationNo = registrationNo;
           this.rollNo = rollNo;
@@ -43,13 +43,14 @@
           this.aadhaarNo = aadhaarNo;
           this.dateOfBirth = dateOfBirth;
           this.bloodGroup = bloodGroup;
+          this.semester=semester;
      }
 
-     public long getUserID() {
+     public int getUserID() {
           return userID;
      }
 
-     public void setUserID(long userID) {
+     public void setUserID(int userID) {
           this.userID = userID;
      }
 
@@ -73,6 +74,20 @@
           return name;
      }
 
+     public void setSemester(String semester) {
+          this.semester = semester;
+     }
+     public String getSemester() {
+          return semester;
+     }
+
+     public String getSemester_department() {
+          return semester+department;
+     }
+     public void setSemester_department(String semester, String s, String department) {
+          this.semester=semester;
+          this.department=department;
+     }
      public void setName(String name) {
           this.name = name;
      }
Index: src/main/java/com/collegemanagementsystem/Dto/StudentDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Dto;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"Student\")\r\npublic class StudentDto {\r\n    @Id\r\n    @GeneratedValue\r\n    private long userID;\r\n    private long registrationNo;\r\n    private long rollNo;\r\n    private String name;\r\n    private String department;\r\n    private long batch;\r\n    private String category;\r\n    private String fatherName;\r\n    private String motherName;\r\n    private long fatherContactNo;\r\n    private long emergencyContactNo;\r\n    private long aadhaarNo;\r\n    private String dateOfBirth;\r\n    private String bloodGroup;\r\n\r\n    public StudentDto() {\r\n    }\r\n\r\n    public StudentDto(long userID, long registrationNo, long rollNo, String name, String department, long batch, String category, String fatherName, String motherName, long fatherContactNo, long emergencyContactNo, long aadhaarNo, String dateOfBirth, String bloodGroup) {\r\n        this.userID = userID;\r\n        this.registrationNo = registrationNo;\r\n        this.rollNo = rollNo;\r\n        this.name = name;\r\n        this.department = department;\r\n        this.batch = batch;\r\n        this.category = category;\r\n        this.fatherName = fatherName;\r\n        this.motherName = motherName;\r\n        this.fatherContactNo = fatherContactNo;\r\n        this.emergencyContactNo = emergencyContactNo;\r\n        this.aadhaarNo = aadhaarNo;\r\n        this.dateOfBirth = dateOfBirth;\r\n        this.bloodGroup = bloodGroup;\r\n    }\r\n\r\n    public long getUserID() {\r\n        return userID;\r\n    }\r\n\r\n    public void setUserID(long userID) {\r\n        this.userID = userID;\r\n    }\r\n\r\n    public long getRegistrationNo() {\r\n        return registrationNo;\r\n    }\r\n\r\n    public void setRegistrationNo(long registrationNo) {\r\n        this.registrationNo = registrationNo;\r\n    }\r\n\r\n    public long getRollNo() {\r\n        return rollNo;\r\n    }\r\n\r\n    public void setRollNo(long rollNo) {\r\n        this.rollNo = rollNo;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getDepartment() {\r\n        return department;\r\n    }\r\n\r\n    public void setDepartment(String department) {\r\n        this.department = department;\r\n    }\r\n\r\n    public long getBatch() {\r\n        return batch;\r\n    }\r\n\r\n    public void setBatch(long batch) {\r\n        this.batch = batch;\r\n    }\r\n\r\n    public String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public void setCategory(String category) {\r\n        this.category = category;\r\n    }\r\n\r\n    public String getFatherName() {\r\n        return fatherName;\r\n    }\r\n\r\n    public void setFatherName(String fatherName) {\r\n        this.fatherName = fatherName;\r\n    }\r\n\r\n    public String getMotherName() {\r\n        return motherName;\r\n    }\r\n\r\n    public void setMotherName(String motherName) {\r\n        this.motherName = motherName;\r\n    }\r\n\r\n    public long getFatherContactNo() {\r\n        return fatherContactNo;\r\n    }\r\n\r\n    public void setFatherContactNo(long fatherContactNo) {\r\n        this.fatherContactNo = fatherContactNo;\r\n    }\r\n\r\n    public long getEmergencyContactNo() {\r\n        return emergencyContactNo;\r\n    }\r\n\r\n    public void setEmergencyContactNo(long emergencyContactNo) {\r\n        this.emergencyContactNo = emergencyContactNo;\r\n    }\r\n\r\n    public long getAadhaarNo() {\r\n        return aadhaarNo;\r\n    }\r\n\r\n    public void setAadhaarNo(long aadhaarNo) {\r\n        this.aadhaarNo = aadhaarNo;\r\n    }\r\n\r\n    public String getDateOfBirth() {\r\n        return dateOfBirth;\r\n    }\r\n\r\n    public void setDateOfBirth(String dateOfBirth) {\r\n        this.dateOfBirth = dateOfBirth;\r\n    }\r\n\r\n    public String getBloodGroup() {\r\n        return bloodGroup;\r\n    }\r\n\r\n    public void setBloodGroup(String bloodGroup) {\r\n        this.bloodGroup = bloodGroup;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Dto/StudentDto.java b/src/main/java/com/collegemanagementsystem/Dto/StudentDto.java
--- a/src/main/java/com/collegemanagementsystem/Dto/StudentDto.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Dto/StudentDto.java	(date 1621259223539)
@@ -10,7 +10,7 @@
 public class StudentDto {
     @Id
     @GeneratedValue
-    private long userID;
+    private int userID;
     private long registrationNo;
     private long rollNo;
     private String name;
@@ -24,11 +24,12 @@
     private long aadhaarNo;
     private String dateOfBirth;
     private String bloodGroup;
+    private String semester;
 
     public StudentDto() {
     }
 
-    public StudentDto(long userID, long registrationNo, long rollNo, String name, String department, long batch, String category, String fatherName, String motherName, long fatherContactNo, long emergencyContactNo, long aadhaarNo, String dateOfBirth, String bloodGroup) {
+    public StudentDto(int userID, long registrationNo, long rollNo, String name, String department, long batch, String category, String fatherName, String motherName, long fatherContactNo, long emergencyContactNo, long aadhaarNo, String dateOfBirth, String bloodGroup) {
         this.userID = userID;
         this.registrationNo = registrationNo;
         this.rollNo = rollNo;
@@ -43,13 +44,14 @@
         this.aadhaarNo = aadhaarNo;
         this.dateOfBirth = dateOfBirth;
         this.bloodGroup = bloodGroup;
+        this.semester=semester;
     }
 
     public long getUserID() {
         return userID;
     }
 
-    public void setUserID(long userID) {
+    public void setUserID(int userID) {
         this.userID = userID;
     }
 
@@ -61,9 +63,23 @@
         this.registrationNo = registrationNo;
     }
 
+    public void setSemester_department(String semester, String s, String department) {
+        this.semester=semester;
+        this.department=department;
+    }
+
+    public String getSemester_department() {
+        return semester+department;
+    }
     public long getRollNo() {
         return rollNo;
     }
+    public void setSemester(String semester) {
+        this.semester = semester;
+    }
+    public String getSemester() {
+        return semester;
+    }
 
     public void setRollNo(long rollNo) {
         this.rollNo = rollNo;
Index: src/main/java/com/collegemanagementsystem/Controller/FCMController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Controller;\r\nimport com.collegemanagementsystem.Entity.PushNotificationRequest;\r\nimport com.collegemanagementsystem.Entity.PushNotificationResponse;\r\nimport com.collegemanagementsystem.Service.FCMService;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport java.util.concurrent.ExecutionException;\r\n\r\n@RestController\r\npublic class FCMController {\r\n\r\n    private FCMService pushNotificationService;\r\n    public FCMController(FCMService pushNotificationService) {\r\n        this.pushNotificationService = pushNotificationService;\r\n    }\r\n\r\n\r\n    @PostMapping(value = \"/notification/token\")\r\n    public  ResponseEntity sendTokenNotification( @RequestBody PushNotificationRequest request) throws ExecutionException, InterruptedException {\r\n        pushNotificationService.sendNotificationWithToken(request);\r\n        return new ResponseEntity<>(new PushNotificationResponse(HttpStatus.OK.value(), \"Notification has been sent.\"), HttpStatus.OK);\r\n    }\r\n\r\n    @PostMapping(value = \"/notification/topic\")\r\n    public  ResponseEntity sendNotification(@RequestBody PushNotificationRequest request) throws ExecutionException, InterruptedException {\r\n        pushNotificationService.sendMessageWithTopic(request);\r\n        return new ResponseEntity<>(new PushNotificationResponse(HttpStatus.OK.value(), \"Notification has been sent.\"), HttpStatus.OK);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Controller/FCMController.java b/src/main/java/com/collegemanagementsystem/Controller/FCMController.java
--- a/src/main/java/com/collegemanagementsystem/Controller/FCMController.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Controller/FCMController.java	(date 1621274544438)
@@ -2,11 +2,10 @@
 import com.collegemanagementsystem.Entity.PushNotificationRequest;
 import com.collegemanagementsystem.Entity.PushNotificationResponse;
 import com.collegemanagementsystem.Service.FCMService;
+import com.google.firebase.messaging.FirebaseMessagingException;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.PostMapping;
-import org.springframework.web.bind.annotation.RequestBody;
-import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.bind.annotation.*;
 
 import java.util.concurrent.ExecutionException;
 
@@ -26,8 +25,18 @@
     }
 
     @PostMapping(value = "/notification/topic")
-    public  ResponseEntity sendNotification(@RequestBody PushNotificationRequest request) throws ExecutionException, InterruptedException {
+    public  ResponseEntity sendTopicNotification(@RequestBody PushNotificationRequest request) throws ExecutionException, InterruptedException {
         pushNotificationService.sendMessageWithTopic(request);
         return new ResponseEntity<>(new PushNotificationResponse(HttpStatus.OK.value(), "Notification has been sent."), HttpStatus.OK);
     }
+    @GetMapping("/subscribe/{uid}")
+    public ResponseEntity subscribeToTopic(@PathVariable(value = "uid") int uid) throws ExecutionException, InterruptedException, FirebaseMessagingException {
+        pushNotificationService.subscribeToTopics(uid);
+        return new ResponseEntity<>(new PushNotificationResponse(HttpStatus.OK.value(), "Topic subscribed"), HttpStatus.OK);
+    }
+    @GetMapping("/unsubscribe/{uid}")
+    public ResponseEntity unsubscribeToTopic(@PathVariable(value = "uid") int uid) throws ExecutionException, InterruptedException, FirebaseMessagingException {
+        pushNotificationService.unsubscribeToTopics(uid);
+        return new ResponseEntity<>(new PushNotificationResponse(HttpStatus.OK.value(), "Topic unsubscribed"), HttpStatus.OK);
+    }
 }
Index: src/main/java/com/collegemanagementsystem/Service/FCMService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Service;\r\n\r\nimport com.collegemanagementsystem.Entity.PushNotificationRequest;\r\nimport com.google.firebase.messaging.*;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.time.Duration;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\n\r\n@Service\r\npublic class FCMService {\r\n\r\n    Logger logger= LoggerFactory.getLogger(FCMInitializer.class);\r\n\r\n    public void sendNotificationWithToken(PushNotificationRequest request) throws ExecutionException, InterruptedException {\r\n        Message message = getPreconfiguredMessageBuilder(request).setToken(request.getToken())\r\n                .build();\r\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n            String jsonOutput = gson.toJson(message);\r\n            String response= sendAndGetResponse(message);\r\n            logger.info(\"Sent message to token. Device token: \" + request.getToken() + \", \" + response+ \" msg \"+jsonOutput);\r\n\r\n    }\r\n\r\n    public void sendMessageWithTopic(PushNotificationRequest request)\r\n            throws InterruptedException, ExecutionException {\r\n        Message message = getPreconfiguredMessageWithoutData(request);\r\n        String response = sendAndGetResponse(message);\r\n        logger.info(\"Sent message without data. Topic: \" + request.getTopic() + \", \" + response);\r\n    }\r\n\r\n    private Message getPreconfiguredMessageWithoutData(PushNotificationRequest request) {\r\n        return getPreconfiguredMessageBuilder(request).setTopic(request.getTopic())\r\n                .build();\r\n    }\r\n    private String sendAndGetResponse(Message message) throws InterruptedException, ExecutionException {\r\n        return FirebaseMessaging.getInstance().sendAsync(message).get();\r\n    }\r\n\r\n    private Message.Builder getPreconfiguredMessageBuilder(PushNotificationRequest request) {\r\n        AndroidConfig androidConfig = getAndroidConfig(request.getTopic());\r\n        ApnsConfig apnsConfig = getApnsConfig(request.getTopic());\r\n        return Message.builder()\r\n                .setApnsConfig(apnsConfig).setAndroidConfig(androidConfig).setNotification(\r\n                        new Notification(request.getTitle(), request.getMessage()));\r\n    }\r\n\r\n    private ApnsConfig getApnsConfig(String topic) {\r\n        return ApnsConfig.builder()\r\n                .setAps(Aps.builder().setCategory(topic).setThreadId(topic).build()).build();\r\n    }\r\n\r\n    private AndroidConfig getAndroidConfig(String topic) {\r\n        return AndroidConfig.builder()\r\n                .setTtl(Duration.ofMinutes(2).toMillis()).setCollapseKey(topic)\r\n                .setPriority(AndroidConfig.Priority.HIGH)\r\n                .setNotification(AndroidNotification.builder().setSound(\"default\").setColor(\"#FFFF00\").setTag(topic).build()).build();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Service/FCMService.java b/src/main/java/com/collegemanagementsystem/Service/FCMService.java
--- a/src/main/java/com/collegemanagementsystem/Service/FCMService.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Service/FCMService.java	(date 1621327918298)
@@ -1,21 +1,37 @@
 package com.collegemanagementsystem.Service;
 
-import com.collegemanagementsystem.Entity.PushNotificationRequest;
+import com.collegemanagementsystem.Entity.*;
+import com.collegemanagementsystem.Repository.TokenRegistrationRepository;
+import com.collegemanagementsystem.Repository.TopicRepository;
 import com.google.firebase.messaging.*;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 
+import net.bytebuddy.jar.asm.Type;
+import net.bytebuddy.jar.asm.commons.Remapper;
+import org.modelmapper.ModelMapper;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
 import java.time.Duration;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Objects;
 import java.util.concurrent.ExecutionException;
+import java.util.stream.Collectors;
 
 
 @Service
 public class FCMService {
-
+        @Autowired
+        private TokenRegistrationRepository tokenRepo;
+        @Autowired
+        private TopicRepository topicRepo;
+        @Autowired
+        ModelMapper mapper;
     Logger logger= LoggerFactory.getLogger(FCMInitializer.class);
 
     public void sendNotificationWithToken(PushNotificationRequest request) throws ExecutionException, InterruptedException {
@@ -30,12 +46,12 @@
 
     public void sendMessageWithTopic(PushNotificationRequest request)
             throws InterruptedException, ExecutionException {
-        Message message = getPreconfiguredMessageWithoutData(request);
+        Message message = getPreconfiguredMessage(request);
         String response = sendAndGetResponse(message);
         logger.info("Sent message without data. Topic: " + request.getTopic() + ", " + response);
     }
 
-    private Message getPreconfiguredMessageWithoutData(PushNotificationRequest request) {
+    private Message getPreconfiguredMessage(PushNotificationRequest request) {
         return getPreconfiguredMessageBuilder(request).setTopic(request.getTopic())
                 .build();
     }
@@ -62,6 +78,45 @@
                 .setPriority(AndroidConfig.Priority.HIGH)
                 .setNotification(AndroidNotification.builder().setSound("default").setColor("#FFFF00").setTag(topic).build()).build();
     }
+    //List<String> registrationTokens = Arrays.asList(
+     //       "fhAgBJftRo--cVCBNOGdgx:APA91bHkGpU18QlooOqbOQbJ0swMW59_wY_QbxjdHSi3cDCw8BTltUxUpf6VSawkC5PnOCBiILbc_FYkFrl_pjmpRfeTTefetMpsZ8rINLmsnFXPcNH-vvrK7ZoL-N5Bcl_HH-RSLiJY"
+    //,"kjhghjkj");
 
+    public String subscribeToTopics(Integer uid ) throws FirebaseMessagingException {
+        List<TokenRegistration> tokens=  tokenRepo.getById(uid);
+        List<String> token=new ArrayList<>();
+        for (TokenRegistration newToken: tokens){
+            token.add(newToken.getToken());
+        }
+        List<TopicEntity> topics=  topicRepo.findByUid(uid);
+        List<String> topic=new ArrayList<>();
+        for (TopicEntity newTopic: topics){
+            topic.add(newTopic.getTopic());
+        }
 
+        for(String item: topic){
+            TopicManagementResponse response = FirebaseMessaging.getInstance().subscribeToTopic(
+                    token, item);
+        }
+        return " tokens were subscribed successfully";
+    }
+
+    public String unsubscribeToTopics(Integer uid) throws FirebaseMessagingException {
+        List<TokenRegistration> tokens= (List<TokenRegistration>) tokenRepo.getById(uid);
+        List<String> token=new ArrayList<>();
+        for (TokenRegistration newToken: tokens){
+            token.add(newToken.getToken());
+        }
+        List<TopicEntity> topics= (List<TopicEntity>) topicRepo.findByUid(uid);
+        List<String> topic=new ArrayList<>();
+        for (TopicEntity newTopic: topics){
+            topic.add(newTopic.getTopic());
+        }
+        for(String item: topic){
+            TopicManagementResponse response = FirebaseMessaging.getInstance().unsubscribeFromTopic(
+                    token,item);
+        }
+        return //response.getSuccessCount() +
+         " tokens were unsubscribed successfully";
+    }
 }
Index: src/main/java/com/collegemanagementsystem/Controller/TokenRegistarationController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Controller;\r\nimport com.collegemanagementsystem.Dto.TokenRegistrationDTO;\r\nimport com.collegemanagementsystem.Service.TokenRegistrationService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/fcm\")\r\npublic class TokenRegistarationController {\r\n\r\n    @Autowired\r\n    private TokenRegistrationService service;\r\n    @PostMapping(value = \"/token\")\r\n    public TokenRegistrationDTO addStudent(@RequestBody TokenRegistrationDTO dto) {\r\n        return service.addStudent(dto);\r\n    }\r\n\r\n    @GetMapping(\"/token\")\r\n    public List<TokenRegistrationDTO> getStudent(){\r\n        return (List<TokenRegistrationDTO>) service.getStudent();\r\n    }\r\n\r\n    @GetMapping(\"/token/{id}\")\r\n    public TokenRegistrationDTO FindById(@PathVariable(value = \"id\")int id ){\r\n        return service.FindById(id);\r\n    }\r\n    @DeleteMapping(\"/token/{id}\")\r\n    public String deleteById(@RequestBody @PathVariable(value = \"id\")int id ){\r\n        return service.deleteById(id);\r\n    }\r\n\r\n    @DeleteMapping(\"/token\")\r\n    public String deleteAllStudents(){\r\n        return service.delete();\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Controller/TokenRegistarationController.java b/src/main/java/com/collegemanagementsystem/Controller/TokenRegistarationController.java
--- a/src/main/java/com/collegemanagementsystem/Controller/TokenRegistarationController.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Controller/TokenRegistarationController.java	(date 1621337627773)
@@ -12,23 +12,16 @@
 
     @Autowired
     private TokenRegistrationService service;
+
     @PostMapping(value = "/token")
-    public TokenRegistrationDTO addStudent(@RequestBody TokenRegistrationDTO dto) {
-        return service.addStudent(dto);
-    }
-
-    @GetMapping("/token")
-    public List<TokenRegistrationDTO> getStudent(){
-        return (List<TokenRegistrationDTO>) service.getStudent();
-    }
-
-    @GetMapping("/token/{id}")
-    public TokenRegistrationDTO FindById(@PathVariable(value = "id")int id ){
-        return service.FindById(id);
+    public String addStudent(@RequestBody TokenRegistrationDTO dto) {
+         service.addStudent(dto);
+         return "Token added";
     }
     @DeleteMapping("/token/{id}")
     public String deleteById(@RequestBody @PathVariable(value = "id")int id ){
-        return service.deleteById(id);
+         service.deleteById(id);
+         return "Token Deleted Successfully";
     }
 
     @DeleteMapping("/token")
Index: target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/user\r\nspring.datasource.username=root\r\nspring.datasource.password=Gourav@8252\r\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57InnoDBDialect\r\nspring.jpa.properties.hibernate.format_sql = true\r\nspring.datasource.testWhileIdle = true\r\nspring.datasource.timeBetweenEvictionRunsMillis = 60000\r\nspring.datasource.validationQuery = SELECT 1\r\nspring.jpa.hibernate.ddl-auto = update\r\nspring.jpa.generate-ddl=true\r\nsecurity.basic.enable=false\r\nsecurity.ignored=/**\r\n\r\napp.firebase-configuration-file=firebaseconfig/cms-kec-firebase-adminsdk-z5iok-53ef0bd5c2.json\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/application.properties b/target/classes/application.properties
--- a/target/classes/application.properties	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/target/classes/application.properties	(date 1621016901303)
@@ -2,7 +2,7 @@
 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
 spring.datasource.url=jdbc:mysql://localhost:3306/user
 spring.datasource.username=root
-spring.datasource.password=Gourav@8252
+spring.datasource.password=manisha
 spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57InnoDBDialect
 spring.jpa.properties.hibernate.format_sql = true
 spring.datasource.testWhileIdle = true
Index: src/main/java/com/collegemanagementsystem/Service/TopicService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Service/TopicService.java b/src/main/java/com/collegemanagementsystem/Service/TopicService.java
new file mode 100644
--- /dev/null	(date 1621328430059)
+++ b/src/main/java/com/collegemanagementsystem/Service/TopicService.java	(date 1621328430059)
@@ -0,0 +1,94 @@
+package com.collegemanagementsystem.Service;
+
+
+import com.collegemanagementsystem.Entity.*;
+import com.collegemanagementsystem.Repository.StudentRepository;
+import com.collegemanagementsystem.Repository.TopicRepository;
+import com.collegemanagementsystem.Repository.UserRepository;
+import com.collegemanagementsystem.Repository.UserRoleRepository;
+import org.modelmapper.ModelMapper;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.stream.Collectors;
+
+@Service
+public class TopicService {
+    @Autowired
+    private TopicRepository topicrepo;
+
+    @Autowired
+    ModelMapper mapper;
+    @Autowired
+    public UserRepository userrepo;
+    @Autowired
+    public UserRoleRepository userrolerepo;
+    @Autowired
+    private StudentRepository studentrepo;
+
+    public void addTopic(int uid){
+        List<UserRole> roles=userrolerepo.getRoleById(uid);
+        Student students=studentrepo.getById(uid);
+        List<String> role=new ArrayList<>();
+        for (UserRole newRole: roles){
+            role.add(newRole.getRole_name());
+        }
+
+        for (String newRole: role){
+            if(newRole.toLowerCase().equals("student")){
+                List<TopicEntity> topics = new ArrayList<>();
+                TopicEntity topic=new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic(students.getDepartment());
+                TopicEntity department= mapper.map(topic,TopicEntity.class);
+                topics.add(department);
+                topic=new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic(newRole);
+                TopicEntity role1= mapper.map(topic,TopicEntity.class);
+                topics.add(role1);
+                topic=new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic(students.getSemester());
+                TopicEntity semester= mapper.map(topic,TopicEntity.class);
+               topics.add(semester);
+                topic=new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic(students.getSemester_department());
+                TopicEntity sem_dep= mapper.map(topic,TopicEntity.class);
+                topics.add(sem_dep);
+                topic=new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic("general");
+                topic= mapper.map(topic,TopicEntity.class);
+                topics.add(topic);
+                topicrepo.saveAll(topics);
+            }
+            if(newRole.toLowerCase().equals("faculty")){
+                List<TopicEntity> topics = new ArrayList<>();
+                TopicEntity topic=new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic(students.getDepartment());
+                TopicEntity department= mapper.map(topic,TopicEntity.class);
+                topics.add(department);
+                topic=new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic(newRole);
+                topic= mapper.map(topic,TopicEntity.class);
+                topics.add(topic);
+                topic =new TopicEntity();
+                topic.setUid(uid);
+                topic.setTopic("general");
+                topics.add(topic);
+                topicrepo.saveAll(topics);
+            }
+        }
+
+    }
+    public String DeleteByUid(Integer uid){
+        topicrepo.deleteById(uid);
+        return "Deleted";
+    }
+
+}
Index: src/main/java/com/collegemanagementsystem/Repository/TokenRegistrationRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Repository;\r\nimport com.collegemanagementsystem.Entity.TokenRegistration;\r\nimport org.springframework.data.repository.CrudRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n\r\n@Repository\r\npublic interface TokenRegistrationRepository extends CrudRepository<TokenRegistration, Integer> {\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Repository/TokenRegistrationRepository.java b/src/main/java/com/collegemanagementsystem/Repository/TokenRegistrationRepository.java
--- a/src/main/java/com/collegemanagementsystem/Repository/TokenRegistrationRepository.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Repository/TokenRegistrationRepository.java	(date 1621111115448)
@@ -1,11 +1,16 @@
 package com.collegemanagementsystem.Repository;
 import com.collegemanagementsystem.Entity.TokenRegistration;
+import org.springframework.data.jpa.repository.Query;
 import org.springframework.data.repository.CrudRepository;
+import org.springframework.data.repository.query.Param;
 import org.springframework.stereotype.Repository;
 
+import java.util.List;
+import java.util.Optional;
+
 
 @Repository
 public interface TokenRegistrationRepository extends CrudRepository<TokenRegistration, Integer> {
-
-
+    @Query("select r from TokenRegistration r where r.uid= :id")
+    List<TokenRegistration> getById(@Param("id")int id);
 }
\ No newline at end of file
Index: src/main/java/com/collegemanagementsystem/Repository/StudentRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Repository;\r\n\r\nimport com.collegemanagementsystem.Entity.Student;\r\nimport org.springframework.data.repository.CrudRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface StudentRepository extends CrudRepository<Student, Long> {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Repository/StudentRepository.java b/src/main/java/com/collegemanagementsystem/Repository/StudentRepository.java
--- a/src/main/java/com/collegemanagementsystem/Repository/StudentRepository.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Repository/StudentRepository.java	(date 1621258183095)
@@ -1,9 +1,16 @@
 package com.collegemanagementsystem.Repository;
 
 import com.collegemanagementsystem.Entity.Student;
+import com.collegemanagementsystem.Entity.TokenRegistration;
+import org.springframework.data.jpa.repository.Query;
 import org.springframework.data.repository.CrudRepository;
+import org.springframework.data.repository.query.Param;
 import org.springframework.stereotype.Repository;
 
+import java.util.List;
+
 @Repository
 public interface StudentRepository extends CrudRepository<Student, Long> {
+    @Query("select r from Student r where r.userID= :id")
+    Student getById(@Param("id")int id);
 }
Index: src/main/java/com/collegemanagementsystem/Controller/TopicController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Controller/TopicController.java b/src/main/java/com/collegemanagementsystem/Controller/TopicController.java
new file mode 100644
--- /dev/null	(date 1621337554673)
+++ b/src/main/java/com/collegemanagementsystem/Controller/TopicController.java	(date 1621337554673)
@@ -0,0 +1,28 @@
+package com.collegemanagementsystem.Controller;
+
+import com.collegemanagementsystem.Dto.TopicDto;
+import com.collegemanagementsystem.Entity.TopicUid;
+import com.collegemanagementsystem.Service.TopicService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+
+@RestController
+@RequestMapping("/fcm")
+public class TopicController {
+  @Autowired
+  public TopicService service;
+
+    @GetMapping(value = "/addtopic/{uid}")
+    public String addStudent(@PathVariable(value = "uid")Integer uid) {
+       service.addTopic(uid);
+       return "Topic Added";
+    }
+
+    @DeleteMapping ("/topic/{uid}")
+    public String FindById(@PathVariable(value = "uid")Integer uid ){
+         service.DeleteByUid(uid);
+        return "Topic Deleted Successfully";
+    }
+}
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/user\r\nspring.datasource.username=root\r\nspring.datasource.password=Gourav@8252\r\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57InnoDBDialect\r\nspring.jpa.properties.hibernate.format_sql = true\r\nspring.datasource.testWhileIdle = true\r\nspring.datasource.timeBetweenEvictionRunsMillis = 60000\r\nspring.datasource.validationQuery = SELECT 1\r\nspring.jpa.hibernate.ddl-auto = update\r\nspring.jpa.generate-ddl=true\r\nsecurity.basic.enable=false\r\nsecurity.ignored=/**\r\n\r\napp.firebase-configuration-file=firebaseconfig/cms-kec-firebase-adminsdk-z5iok-53ef0bd5c2.json\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/resources/application.properties	(date 1620977060329)
@@ -2,7 +2,7 @@
 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
 spring.datasource.url=jdbc:mysql://localhost:3306/user
 spring.datasource.username=root
-spring.datasource.password=Gourav@8252
+spring.datasource.password=manisha
 spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57InnoDBDialect
 spring.jpa.properties.hibernate.format_sql = true
 spring.datasource.testWhileIdle = true
Index: src/main/java/com/collegemanagementsystem/Service/FCMInitializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Service;\r\n\r\nimport com.google.auth.oauth2.GoogleCredentials;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.FirebaseOptions;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.core.io.ClassPathResource;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport javax.annotation.PostConstruct;\r\nimport java.io.IOException;\r\n\r\n@Service\r\n@Slf4j\r\npublic class FCMInitializer {\r\n    @Value(\"${app.firebase-configuration-file}\")\r\n    private String firebaseConfigPath;\r\n\r\n    Logger logger= LoggerFactory.getLogger(FCMInitializer.class);\r\n@PostConstruct\r\n    public void initialize(){\r\n        try{\r\n            FirebaseOptions options=new FirebaseOptions.Builder().setCredentials(GoogleCredentials.fromStream(new ClassPathResource(firebaseConfigPath).getInputStream())).build();\r\n            if(FirebaseApp.getApps().isEmpty()){\r\n                FirebaseApp.initializeApp(options);\r\n                logger.info(\"Firebase application has been initialized \");\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Service/FCMInitializer.java b/src/main/java/com/collegemanagementsystem/Service/FCMInitializer.java
--- a/src/main/java/com/collegemanagementsystem/Service/FCMInitializer.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Service/FCMInitializer.java	(date 1621068497515)
@@ -14,17 +14,17 @@
 import java.io.IOException;
 
 @Service
-@Slf4j
 public class FCMInitializer {
     @Value("${app.firebase-configuration-file}")
     private String firebaseConfigPath;
 
-    Logger logger= LoggerFactory.getLogger(FCMInitializer.class);
-@PostConstruct
-    public void initialize(){
-        try{
-            FirebaseOptions options=new FirebaseOptions.Builder().setCredentials(GoogleCredentials.fromStream(new ClassPathResource(firebaseConfigPath).getInputStream())).build();
-            if(FirebaseApp.getApps().isEmpty()){
+    Logger logger = LoggerFactory.getLogger(FCMInitializer.class);
+
+    @PostConstruct
+    public void initialize() {
+        try {
+            FirebaseOptions options = new FirebaseOptions.Builder().setCredentials(GoogleCredentials.fromStream(new ClassPathResource(firebaseConfigPath).getInputStream())).build();
+            if (FirebaseApp.getApps().isEmpty()) {
                 FirebaseApp.initializeApp(options);
                 logger.info("Firebase application has been initialized ");
             }
Index: src/main/java/com/collegemanagementsystem/Repository/TopicRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Repository/TopicRepository.java b/src/main/java/com/collegemanagementsystem/Repository/TopicRepository.java
new file mode 100644
--- /dev/null	(date 1621268347882)
+++ b/src/main/java/com/collegemanagementsystem/Repository/TopicRepository.java	(date 1621268347882)
@@ -0,0 +1,22 @@
+package com.collegemanagementsystem.Repository;
+
+import com.collegemanagementsystem.Entity.TopicEntity;
+import com.collegemanagementsystem.Entity.UserRole;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+import org.springframework.data.repository.query.Param;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public interface TopicRepository extends CrudRepository<TopicEntity, Integer> {
+
+    //@Query(value = "select topic from TopicEntity topic where topic.uid = :uid")
+    @Query("select new com.collegemanagementsystem.Entity.TopicEntity(r.topic) from TopicEntity r where r.uid= :uid")
+    List<TopicEntity> findByUid(@Param("uid") int uid);
+    @Query("select r from TopicEntity r where r.uid = :id AND r.topic= :nm")
+    TopicEntity checkTopic(@Param("id") Integer id, @Param("nm") String nm);
+
+
+}
Index: src/main/java/com/collegemanagementsystem/Entity/TopicUid.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Entity/TopicUid.java b/src/main/java/com/collegemanagementsystem/Entity/TopicUid.java
new file mode 100644
--- /dev/null	(date 1621268009994)
+++ b/src/main/java/com/collegemanagementsystem/Entity/TopicUid.java	(date 1621268009994)
@@ -0,0 +1,21 @@
+package com.collegemanagementsystem.Entity;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import javax.persistence.Id;
+import java.io.Serializable;
+
+@Setter
+@Getter
+@NoArgsConstructor
+@AllArgsConstructor
+public class TopicUid implements Serializable {
+
+    private Integer uid;
+
+    private String topic;
+
+}
Index: src/main/java/com/collegemanagementsystem/Dto/TopicDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Dto/TopicDto.java b/src/main/java/com/collegemanagementsystem/Dto/TopicDto.java
new file mode 100644
--- /dev/null	(date 1621268503233)
+++ b/src/main/java/com/collegemanagementsystem/Dto/TopicDto.java	(date 1621268503233)
@@ -0,0 +1,21 @@
+package com.collegemanagementsystem.Dto;
+
+import lombok.*;
+
+import javax.persistence.*;
+
+@Setter
+@Getter
+@NoArgsConstructor
+@AllArgsConstructor
+
+
+public class TopicDto  {
+
+    //private int id;
+    private String topic;
+    private int uid;
+    public TopicDto(String topic){
+        this.topic=topic;
+    }
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>com.cms.keck</groupId>\r\n    <artifactId>CollegeManagementSystem</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <packaging>war</packaging>\r\n    <name>CollegeManagementSystem</name>\r\n    <description>CMS project using Spring Boot</description>\r\n\r\n    <properties>\r\n        <maven.compiler.source>8</maven.compiler.source>\r\n        <maven.compiler.target>8</maven.compiler.target>\r\n        <java.version>1.8</java.version>\r\n        <tomcat.version>9.0.35</tomcat.version>\r\n        <start-class>CollegeManagementSystem.CmsApplication</start-class>\r\n\r\n    </properties>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.4.0</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n\r\n\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-tomcat</artifactId>\r\n            <!--  <scope>provided</scope>-->\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.google.code.gson</groupId>\r\n            <artifactId>gson</artifactId>\r\n            <version>2.8.2</version>\r\n        </dependency>\r\n        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->\r\n        <dependency>\r\n            <groupId>com.google.guava</groupId>\r\n            <artifactId>guava</artifactId>\r\n            <version>30.1.1-jre</version>\r\n        </dependency>\r\n\r\n\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <version>8.0.22</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.modelmapper</groupId>\r\n            <artifactId>modelmapper</artifactId>\r\n            <version>2.3.8</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-security</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-validation</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.apache.httpcomponents</groupId>\r\n            <artifactId>httpcore</artifactId>\r\n            <version>4.4.8</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>nl.geodienstencentrum.maven</groupId>\r\n            <artifactId>sass-maven-plugin</artifactId>\r\n            <version>3.7.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.google.firebase</groupId>\r\n            <artifactId>firebase-admin</artifactId>\r\n            <version>6.8.1</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <defaultGoal>install</defaultGoal>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <configuration>\r\n                    <source>8</source>\r\n                    <target>8</target>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/pom.xml	(date 1620987253437)
@@ -109,6 +109,14 @@
                     <target>8</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>9</source>
+                    <target>9</target>
+                </configuration>
+            </plugin>
         </plugins>
     </build>
 
Index: src/main/java/com/collegemanagementsystem/Service/TokenRegistrationService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.collegemanagementsystem.Service;\r\nimport com.collegemanagementsystem.Dto.TokenRegistrationDTO;\r\nimport com.collegemanagementsystem.Entity.TokenRegistration;\r\nimport com.collegemanagementsystem.Repository.TokenRegistrationRepository;\r\nimport org.modelmapper.ModelMapper;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n@Component\r\npublic class TokenRegistrationService {\r\n\r\n    @Autowired\r\n    public TokenRegistrationRepository studentDao;\r\n    @Autowired\r\n    ModelMapper mapper;\r\n\r\n    public TokenRegistrationDTO addStudent(TokenRegistrationDTO dto) {\r\n        TokenRegistration student= mapper.map(dto, TokenRegistration.class);\r\n        studentDao.save(student);\r\n        return mapper.map(student, TokenRegistrationDTO.class);\r\n    }\r\n\r\n    public List<TokenRegistrationDTO> getStudent(){\r\n        List<TokenRegistration> getStudent = (List<TokenRegistration>) studentDao.findAll();\r\n        return getStudent.stream().map(x-> mapper.map(x, TokenRegistrationDTO.class)).collect(Collectors.toList());\r\n    }\r\n\r\n    public String delete(){\r\n        studentDao.deleteAll();\r\n        return \"All data deleted\";\r\n    }\r\n\r\n    public String deleteById(int id){\r\n        studentDao.deleteById(id);\r\n        return \"deleted\";\r\n    }\r\n\r\n    public TokenRegistrationDTO FindById(int id ){\r\n        TokenRegistration student=studentDao.findById(id).orElse(null);\r\n        return mapper.map(student, TokenRegistrationDTO.class);\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/collegemanagementsystem/Service/TokenRegistrationService.java b/src/main/java/com/collegemanagementsystem/Service/TokenRegistrationService.java
--- a/src/main/java/com/collegemanagementsystem/Service/TokenRegistrationService.java	(revision 9aa0b4b15c8a9284dacbfd59ffc97aa5c9a3ed3e)
+++ b/src/main/java/com/collegemanagementsystem/Service/TokenRegistrationService.java	(date 1621280715966)
@@ -38,11 +38,13 @@
         return "deleted";
     }
 
-    public TokenRegistrationDTO FindById(int id ){
-        TokenRegistration student=studentDao.findById(id).orElse(null);
-        return mapper.map(student, TokenRegistrationDTO.class);
+    //public List<Token> FindById(int id ){
+       // List<TokenRegistration> tokens= (List<TokenRegistration>) studentDao.getById(id);
+        //return tokens.stream().map(x-> mapper.map(x, Token.class)).collect(Collectors.toList());
+        //return mapper.map(student, TokenRegistrationDTO.class);
 
-    }
+
+    //}
 
 
 }
\ No newline at end of file
